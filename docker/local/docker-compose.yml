version: '3.8'

services:
  # Frontend Web Application
  web:
    build:
      context: ../..
      dockerfile: docker/local/Dockerfile
      target: web
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - erp-network

  # Backend API Server
  api:
    build:
      context: ../..
      dockerfile: docker/local/Dockerfile
      target: api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - WEIGHBRIDGE_PORT=${WEIGHBRIDGE_PORT:-COM3}
      - DCS_SERVER_IP=${DCS_SERVER_IP:-192.168.1.100}
    depends_on:
      - database
    networks:
      - erp-network
    volumes:
      - ./data/logs:/app/logs

  # MS SQL Server Database
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD:-YourStrong@Passw0rd}
      - MSSQL_DB=${MSSQL_DB:-erp_factory}
    volumes:
      - mssql_data:/var/opt/mssql
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - erp-network

  # Redis for Caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - erp-network

  # MCP Server for AI Features
  mcp-server:
    build:
      context: ../..
      dockerfile: docker/local/Dockerfile.mcp
    ports:
      - "3002:3002"
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - database
    networks:
      - erp-network

volumes:
  mssql_data:
  redis_data:

networks:
  erp-network:
    driver: bridge