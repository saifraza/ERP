// Finance Module Schema Extensions

// Vendor Management
model Vendor {
  id                String   @id @default(uuid())
  code              String   @unique // Auto-generated vendor code
  name              String
  legalName         String?
  type              String   // supplier, contractor, service_provider
  category          String[] // raw_materials, spare_parts, services, etc.
  
  // Contact Information
  email             String
  phone             String
  alternatePhone    String?
  website           String?
  
  // Address
  addressLine1      String
  addressLine2      String?
  city              String
  state             String
  pincode           String
  country           String   @default("India")
  
  // Legal Documents
  gstNumber         String?
  panNumber         String?
  tanNumber         String?
  msmeNumber        String?
  
  // Banking Details
  bankName          String?
  bankBranch        String?
  accountNumber     String?
  ifscCode          String?
  swiftCode         String?
  
  // Business Information
  establishedDate   DateTime?
  annualTurnover    Float?
  creditLimit       Float    @default(0)
  paymentTerms      Int      @default(30) // Days
  
  // Status and Compliance
  status            String   @default("pending") // pending, active, inactive, blacklisted
  verificationStatus String  @default("unverified") // unverified, verified, rejected
  verifiedBy        String?
  verifiedAt        DateTime?
  
  // Performance Metrics
  rating            Float    @default(0) // 0-5
  totalOrders       Int      @default(0)
  totalBusiness     Float    @default(0)
  onTimeDelivery    Float    @default(100) // Percentage
  qualityScore      Float    @default(100) // Percentage
  
  // Metadata
  tags              String[] // For easy filtering
  notes             String?
  createdBy         String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relations
  documents         VendorDocument[]
  contacts          VendorContact[]
  offers            VendorOffer[]
  purchaseOrders    PurchaseOrder[]
  invoices          Invoice[]
  payments          Payment[]
  ratings           VendorRating[]
  communications    VendorCommunication[]
  
  @@index([status])
  @@index([category])
  @@index([name])
}

model VendorDocument {
  id          String   @id @default(uuid())
  vendorId    String
  vendor      Vendor   @relation(fields: [vendorId], references: [id])
  
  type        String   // gst_certificate, pan_card, bank_statement, msme, agreement
  name        String
  fileUrl     String
  fileSize    Int
  uploadedBy  String
  uploadedAt  DateTime @default(now())
  
  validFrom   DateTime?
  validTo     DateTime?
  isActive    Boolean  @default(true)
  
  @@index([vendorId])
}

model VendorContact {
  id          String   @id @default(uuid())
  vendorId    String
  vendor      Vendor   @relation(fields: [vendorId], references: [id])
  
  name        String
  designation String
  department  String?
  email       String?
  phone       String
  isPrimary   Boolean  @default(false)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([vendorId])
}

// Procurement Process
model Indent {
  id              String   @id @default(uuid())
  indentNumber    String   @unique // Auto-generated
  division        String   // sugar, power, ethanol, feed
  department      String
  
  type            String   // regular, urgent, annual_contract
  priority        String   @default("normal") // low, normal, high, critical
  
  requestedBy     String
  requestedDate   DateTime @default(now())
  requiredBy      DateTime
  
  purpose         String
  costCenter      String?
  budgetCode      String?
  estimatedValue  Float?
  
  // Approval Workflow
  status          String   @default("draft") // draft, submitted, approved, rejected, cancelled
  level1Status    String?  // pending, approved, rejected
  level1By        String?
  level1At        DateTime?
  level1Remarks   String?
  
  level2Status    String?
  level2By        String?
  level2At        DateTime?
  level2Remarks   String?
  
  level3Status    String?
  level3By        String?
  level3At        DateTime?
  level3Remarks   String?
  
  // Relations
  items           IndentItem[]
  rfqs            RFQ[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([status])
  @@index([division])
  @@index([indentNumber])
}

model IndentItem {
  id              String   @id @default(uuid())
  indentId        String
  indent          Indent   @relation(fields: [indentId], references: [id])
  
  itemCode        String?
  itemName        String
  description     String?
  specification   String?
  
  uom             String   // Unit of measure
  quantity        Float
  rate            Float?   // Estimated rate
  amount          Float?   // Estimated amount
  
  make            String?  // Preferred make/brand
  model           String?
  
  lastPurchaseRate Float?
  lastVendor      String?
  lastPurchaseDate DateTime?
  
  remarks         String?
  
  @@index([indentId])
}

// RFQ Management
model RFQ {
  id              String   @id @default(uuid())
  rfqNumber       String   @unique
  indentId        String?
  indent          Indent?  @relation(fields: [indentId], references: [id])
  
  title           String
  description     String?
  
  type            String   // open, limited, single_source
  category        String   // goods, services, works
  
  // Timeline
  issuedDate      DateTime @default(now())
  dueDate         DateTime
  openingDate     DateTime?
  
  // Terms
  deliveryTerms   String?
  paymentTerms    String?
  warrantyTerms   String?
  specialTerms    String?
  
  status          String   @default("draft") // draft, published, closed, cancelled
  
  // Relations
  items           RFQItem[]
  vendors         RFQVendor[]
  offers          VendorOffer[]
  
  createdBy       String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([status])
  @@index([rfqNumber])
}

model RFQItem {
  id              String   @id @default(uuid())
  rfqId           String
  rfq             RFQ      @relation(fields: [rfqId], references: [id])
  
  itemName        String
  description     String?
  specification   String?
  
  uom             String
  quantity        Float
  
  make            String?
  model           String?
  
  @@index([rfqId])
}

model RFQVendor {
  id              String   @id @default(uuid())
  rfqId           String
  rfq             RFQ      @relation(fields: [rfqId], references: [id])
  
  vendorId        String
  
  invitedAt       DateTime @default(now())
  emailSent       Boolean  @default(false)
  emailSentAt     DateTime?
  
  viewed          Boolean  @default(false)
  viewedAt        DateTime?
  
  responded       Boolean  @default(false)
  respondedAt     DateTime?
  
  @@index([rfqId])
  @@index([vendorId])
}

// Vendor Offers
model VendorOffer {
  id              String   @id @default(uuid())
  offerNumber     String   @unique
  
  rfqId           String
  rfq             RFQ      @relation(fields: [rfqId], references: [id])
  
  vendorId        String
  vendor          Vendor   @relation(fields: [vendorId], references: [id])
  
  // Offer Details
  submittedAt     DateTime @default(now())
  validUntil      DateTime
  
  // Commercial Terms
  paymentTerms    String?
  deliveryPeriod  String?
  warrantyPeriod  String?
  
  totalAmount     Float
  taxAmount       Float?
  grandTotal      Float
  
  // Status
  status          String   @default("submitted") // submitted, shortlisted, accepted, rejected
  
  // Technical/Commercial Evaluation
  technicalScore  Float?
  commercialScore Float?
  overallScore    Float?
  
  remarks         String?
  
  // Relations
  items           OfferItem[]
  documents       OfferDocument[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([rfqId])
  @@index([vendorId])
  @@index([status])
}

model OfferItem {
  id              String   @id @default(uuid())
  offerId         String
  offer           VendorOffer @relation(fields: [offerId], references: [id])
  
  itemName        String
  description     String?
  
  uom             String
  quantity        Float
  rate            Float
  amount          Float
  
  taxRate         Float?
  taxAmount       Float?
  totalAmount     Float
  
  make            String?
  model           String?
  
  deliveryPeriod  String?
  remarks         String?
  
  @@index([offerId])
}

model OfferDocument {
  id              String   @id @default(uuid())
  offerId         String
  offer           VendorOffer @relation(fields: [offerId], references: [id])
  
  type            String   // quotation, technical_specs, compliance_sheet
  name            String
  fileUrl         String
  
  uploadedAt      DateTime @default(now())
  
  @@index([offerId])
}

// Purchase Orders
model PurchaseOrder {
  id              String   @id @default(uuid())
  poNumber        String   @unique
  revision        Int      @default(0)
  
  vendorId        String
  vendor          Vendor   @relation(fields: [vendorId], references: [id])
  
  offerId         String?  // Reference to accepted offer
  
  // Order Details
  orderDate       DateTime @default(now())
  deliveryDate    DateTime
  
  division        String
  department      String
  
  // Delivery Details
  deliveryAddress String
  billingAddress  String
  
  // Commercial Terms
  paymentTerms    String
  deliveryTerms   String   // FOB, CIF, Ex-works, etc.
  
  // Amounts
  basicAmount     Float
  taxAmount       Float
  otherCharges    Float    @default(0)
  totalAmount     Float
  
  // Status
  status          String   @default("draft") // draft, approved, sent, acknowledged, completed, cancelled
  
  // Approval
  approvedBy      String?
  approvedAt      DateTime?
  
  // Relations
  items           POItem[]
  receipts        GoodsReceipt[]
  invoices        Invoice[]
  
  createdBy       String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([vendorId])
  @@index([status])
  @@index([poNumber])
}

model POItem {
  id              String   @id @default(uuid())
  poId            String
  po              PurchaseOrder @relation(fields: [poId], references: [id])
  
  itemCode        String?
  itemName        String
  description     String?
  
  uom             String
  quantity        Float
  rate            Float
  amount          Float
  
  taxRate         Float?
  taxAmount       Float?
  totalAmount     Float
  
  receivedQty     Float    @default(0)
  pendingQty      Float    @default(0)
  
  @@index([poId])
}

// Goods Receipt
model GoodsReceipt {
  id              String   @id @default(uuid())
  grnNumber       String   @unique
  
  poId            String
  po              PurchaseOrder @relation(fields: [poId], references: [id])
  
  // Receipt Details
  receiptDate     DateTime @default(now())
  challanNumber   String?
  challanDate     DateTime?
  
  vehicleNumber   String?
  transporterName String?
  
  // Inspection
  inspectedBy     String?
  inspectedAt     DateTime?
  qualityStatus   String   @default("pending") // pending, passed, failed, conditional
  
  remarks         String?
  
  // Relations
  items           GRNItem[]
  
  createdBy       String
  createdAt       DateTime @default(now())
  
  @@index([poId])
  @@index([grnNumber])
}

model GRNItem {
  id              String   @id @default(uuid())
  grnId           String
  grn             GoodsReceipt @relation(fields: [grnId], references: [id])
  
  itemName        String
  
  orderedQty      Float
  receivedQty     Float
  acceptedQty     Float
  rejectedQty     Float    @default(0)
  
  remarks         String?
  
  @@index([grnId])
}

// Invoices
model Invoice {
  id              String   @id @default(uuid())
  invoiceNumber   String   // Vendor's invoice number
  
  vendorId        String
  vendor          Vendor   @relation(fields: [vendorId], references: [id])
  
  poId            String?
  po              PurchaseOrder? @relation(fields: [poId], references: [id])
  
  // Invoice Details
  invoiceDate     DateTime
  receivedDate    DateTime @default(now())
  dueDate         DateTime
  
  // Amounts
  basicAmount     Float
  taxAmount       Float
  tdsAmount       Float    @default(0)
  otherDeductions Float    @default(0)
  netAmount       Float
  
  // Status
  status          String   @default("pending") // pending, verified, approved, paid, cancelled
  
  // Three-way match
  poMatched       Boolean  @default(false)
  grnMatched      Boolean  @default(false)
  
  // Approval
  verifiedBy      String?
  verifiedAt      DateTime?
  approvedBy      String?
  approvedAt      DateTime?
  
  // Relations
  items           InvoiceItem[]
  payments        Payment[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([vendorId])
  @@index([status])
  @@index([invoiceNumber])
}

model InvoiceItem {
  id              String   @id @default(uuid())
  invoiceId       String
  invoice         Invoice  @relation(fields: [invoiceId], references: [id])
  
  itemName        String
  
  quantity        Float
  rate            Float
  amount          Float
  
  taxRate         Float?
  taxAmount       Float?
  totalAmount     Float
  
  poReference     String?  // PO line item reference
  grnReference    String?  // GRN line item reference
  
  @@index([invoiceId])
}

// Payments
model Payment {
  id              String   @id @default(uuid())
  paymentNumber   String   @unique
  
  vendorId        String
  vendor          Vendor   @relation(fields: [vendorId], references: [id])
  
  invoiceId       String
  invoice         Invoice  @relation(fields: [invoiceId], references: [id])
  
  // Payment Details
  paymentDate     DateTime
  paymentMode     String   // bank_transfer, cheque, cash, lc
  
  amount          Float
  tdsAmount       Float    @default(0)
  netAmount       Float
  
  // Bank Details
  bankReference   String?
  chequeNumber    String?
  chequeDate      DateTime?
  
  status          String   @default("scheduled") // scheduled, processing, completed, failed, cancelled
  
  remarks         String?
  
  processedBy     String?
  processedAt     DateTime?
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([vendorId])
  @@index([invoiceId])
  @@index([status])
}

// Vendor Rating
model VendorRating {
  id              String   @id @default(uuid())
  vendorId        String
  vendor          Vendor   @relation(fields: [vendorId], references: [id])
  
  poId            String?  // Related to specific order
  
  // Rating Categories (1-5)
  qualityRating   Float
  deliveryRating  Float
  priceRating     Float
  responseRating  Float
  overallRating   Float
  
  comments        String?
  
  ratedBy         String
  ratedAt         DateTime @default(now())
  
  @@index([vendorId])
}

// Communication Log
model VendorCommunication {
  id              String   @id @default(uuid())
  vendorId        String
  vendor          Vendor   @relation(fields: [vendorId], references: [id])
  
  type            String   // email, phone, meeting, visit
  direction       String   // inbound, outbound
  
  subject         String
  content         String?
  
  relatedTo       String?  // rfq_id, po_id, invoice_id
  relatedType     String?  // rfq, po, invoice
  
  emailMessageId  String?  // Gmail message ID for tracking
  
  attachments     String[] // File URLs
  
  createdBy       String
  createdAt       DateTime @default(now())
  
  @@index([vendorId])
  @@index([relatedTo])
}

// Budget Control
model BudgetAllocation {
  id              String   @id @default(uuid())
  
  financialYear   String
  division        String
  department      String
  category        String   // capex, opex, raw_materials, etc.
  
  budgetCode      String   @unique
  description     String
  
  allocatedAmount Float
  utilizedAmount  Float    @default(0)
  committedAmount Float    @default(0) // POs raised but not invoiced
  availableAmount Float
  
  status          String   @default("active") // active, frozen, closed
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([division])
  @@index([budgetCode])
}

// Audit Trail
model FinanceAuditLog {
  id              String   @id @default(uuid())
  
  entityType      String   // vendor, po, invoice, payment
  entityId        String
  
  action          String   // create, update, approve, reject, cancel
  changes         String?  // JSON of what changed
  
  performedBy     String
  performedAt     DateTime @default(now())
  
  ipAddress       String?
  userAgent       String?
  
  @@index([entityType, entityId])
  @@index([performedBy])
}