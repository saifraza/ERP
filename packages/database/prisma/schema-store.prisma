// Store Module Schema
// Handles inventory management, material requisitions, purchase orders, and goods receipt

// Material Requisition (Indent)
model MaterialRequisition {
  id                String   @id @default(uuid())
  requisitionNo     String   @unique
  companyId         String
  factoryId         String
  
  // Requisition Details
  requisitionDate   DateTime @default(now())
  requiredDate      DateTime
  priority          String   @default("NORMAL") // LOW, NORMAL, HIGH, URGENT
  
  // Department/Cost Center
  departmentId      String
  costCenterId      String?
  projectId         String?
  
  // Purpose
  purpose           String
  justification     String?
  
  // Budget
  estimatedValue    Float?
  budgetCode        String?
  budgetAvailable   Float?
  
  // Status and Workflow
  status            String   @default("DRAFT") // DRAFT, SUBMITTED, APPROVED, REJECTED, CONVERTED, CANCELLED
  
  // Multi-level Approval
  currentApprovalLevel Int    @default(0)
  maxApprovalLevel     Int    @default(1)
  approvals            RequisitionApproval[]
  
  // Creation
  createdBy         String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relations
  items             RequisitionItem[]
  purchaseOrders    PurchaseOrder[]
  
  @@index([companyId, factoryId])
  @@index([status])
  @@index([requisitionNo])
}

model RequisitionItem {
  id                String   @id @default(uuid())
  requisitionId     String
  requisition       MaterialRequisition @relation(fields: [requisitionId], references: [id])
  
  // Item Details
  materialCode      String
  materialName      String
  description       String?
  specifications    String?
  
  // Quantity
  quantity          Float
  uom               String
  
  // Previous Purchase Info
  lastPurchaseRate  Float?
  lastVendor        String?
  lastPurchaseDate  DateTime?
  
  // Preferred Vendor
  preferredVendor   String?
  
  remarks           String?
  
  @@index([requisitionId])
  @@index([materialCode])
}

model RequisitionApproval {
  id                String   @id @default(uuid())
  requisitionId     String
  requisition       MaterialRequisition @relation(fields: [requisitionId], references: [id])
  
  approvalLevel     Int
  approverRole      String
  approverId        String?
  
  status            String   @default("PENDING") // PENDING, APPROVED, REJECTED
  remarks           String?
  
  approvedAt        DateTime?
  
  @@index([requisitionId])
  @@index([approverId])
}

// Purchase Order
model PurchaseOrder {
  id                String   @id @default(uuid())
  poNumber          String   @unique
  revision          Int      @default(0)
  companyId         String
  factoryId         String
  
  // Reference
  requisitionId     String?
  requisition       MaterialRequisition? @relation(fields: [requisitionId], references: [id])
  quotationId       String?
  
  // Vendor Details
  vendorId          String
  vendorCode        String
  vendorName        String
  vendorAddress     String
  vendorGST         String?
  
  // PO Details
  poDate            DateTime @default(now())
  validUntil        DateTime
  
  // Delivery
  deliveryDate      DateTime
  deliveryLocation  String
  
  // Terms
  paymentTerms      String
  deliveryTerms     String   // EX-WORKS, FOB, CIF, etc.
  otherTerms        String?
  
  // Amounts
  grossAmount       Float
  discountAmount    Float    @default(0)
  taxableAmount     Float
  cgstAmount        Float    @default(0)
  sgstAmount        Float    @default(0)
  igstAmount        Float    @default(0)
  otherCharges      Float    @default(0)
  roundOff          Float    @default(0)
  totalAmount       Float
  
  // Status
  status            String   @default("DRAFT") // DRAFT, APPROVED, SENT, ACKNOWLEDGED, PARTIAL, COMPLETED, CANCELLED
  
  // Approval
  approvedBy        String?
  approvedAt        DateTime?
  
  // Email
  emailSent         Boolean  @default(false)
  emailSentAt       DateTime?
  
  // Creation
  createdBy         String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relations
  items             PurchaseOrderItem[]
  receipts          GoodsReceipt[]
  
  @@index([companyId, factoryId])
  @@index([vendorId])
  @@index([status])
  @@index([poNumber])
}

model PurchaseOrderItem {
  id                String   @id @default(uuid())
  poId              String
  po                PurchaseOrder @relation(fields: [poId], references: [id])
  
  lineNo            Int
  
  // Item Details
  materialCode      String
  materialName      String
  description       String?
  hsnCode           String?
  
  // Quantity & Rate
  quantity          Float
  uom               String
  rate              Float
  amount            Float
  
  // Discount
  discountPercent   Float    @default(0)
  discountAmount    Float    @default(0)
  
  // Tax
  taxableAmount     Float
  gstRate           Float    @default(0)
  cgstAmount        Float    @default(0)
  sgstAmount        Float    @default(0)
  igstAmount        Float    @default(0)
  
  totalAmount       Float
  
  // Delivery
  deliveryDate      DateTime
  
  // Receipt Status
  receivedQty       Float    @default(0)
  pendingQty        Float
  cancelledQty      Float    @default(0)
  
  remarks           String?
  
  @@index([poId])
  @@index([materialCode])
}

// Goods Receipt Note
model GoodsReceipt {
  id                String   @id @default(uuid())
  grnNumber         String   @unique
  companyId         String
  factoryId         String
  
  // Reference
  poId              String
  po                PurchaseOrder @relation(fields: [poId], references: [id])
  
  // Receipt Details
  receiptDate       DateTime @default(now())
  
  // Vendor Details
  vendorId          String
  vendorName        String
  
  // Challan/Invoice Details
  challanNo         String?
  challanDate       DateTime?
  vendorInvoiceNo   String?
  vendorInvoiceDate DateTime?
  
  // Transport
  vehicleNo         String?
  transporterName   String?
  lrNo              String?
  lrDate            DateTime?
  
  // Gate Entry
  gateEntryNo       String?
  gateEntryTime     DateTime?
  
  // Status
  status            String   @default("PENDING") // PENDING, INSPECTED, ACCEPTED, REJECTED, PARTIAL
  
  // Quality Check
  qcRequired        Boolean  @default(true)
  qcStatus          String?  // PENDING, PASSED, FAILED, CONDITIONAL
  qcBy              String?
  qcDate            DateTime?
  qcRemarks         String?
  
  // Creation
  receivedBy        String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relations
  items             GoodsReceiptItem[]
  stockEntries      StockEntry[]
  
  @@index([companyId, factoryId])
  @@index([poId])
  @@index([vendorId])
  @@index([grnNumber])
}

model GoodsReceiptItem {
  id                String   @id @default(uuid())
  grnId             String
  grn               GoodsReceipt @relation(fields: [grnId], references: [id])
  
  lineNo            Int
  poLineNo          Int      // Reference to PO line
  
  // Item Details
  materialCode      String
  materialName      String
  
  // Quantity
  orderedQty        Float
  challanQty        Float
  receivedQty       Float
  acceptedQty       Float
  rejectedQty       Float    @default(0)
  shortageQty       Float    @default(0)
  excessQty         Float    @default(0)
  
  uom               String
  
  // Storage Location
  warehouseId       String?
  binLocation       String?
  
  // Quality Check
  qcSampleQty       Float?
  qcPassQty         Float?
  qcFailQty         Float?
  
  // Batch/Serial
  batchNo           String?
  serialNo          String?
  mfgDate           DateTime?
  expiryDate        DateTime?
  
  remarks           String?
  
  @@index([grnId])
  @@index([materialCode])
}

// Stock/Inventory
model StockMaster {
  id                String   @id @default(uuid())
  companyId         String
  factoryId         String
  
  materialCode      String
  warehouseId       String
  binLocation       String?
  
  // Stock Quantities
  openingQty        Float    @default(0)
  receivedQty       Float    @default(0)
  issuedQty         Float    @default(0)
  adjustmentQty     Float    @default(0)
  currentQty        Float    @default(0)
  
  // Values
  avgRate           Float    @default(0)
  stockValue        Float    @default(0)
  
  // Reservations
  reservedQty       Float    @default(0)
  availableQty      Float    @default(0)
  
  // Batch Tracking
  batchNo           String?
  expiryDate        DateTime?
  
  lastTransactionDate DateTime?
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@unique([companyId, factoryId, materialCode, warehouseId, binLocation, batchNo])
  @@index([materialCode])
  @@index([warehouseId])
}

// Stock Transactions/Movements
model StockEntry {
  id                String   @id @default(uuid())
  entryNo           String   @unique
  companyId         String
  factoryId         String
  
  // Transaction Type
  transactionType   String   // RECEIPT, ISSUE, TRANSFER, ADJUSTMENT, RETURN
  transactionDate   DateTime @default(now())
  
  // Reference
  referenceType     String?  // GRN, ISSUE_SLIP, TRANSFER_NOTE, etc.
  referenceId       String?
  referenceNo       String?
  
  // For GRN
  grnId             String?
  grn               GoodsReceipt? @relation(fields: [grnId], references: [id])
  
  // Department/Cost Center (for issues)
  departmentId      String?
  costCenterId      String?
  
  // Creation
  createdBy         String
  createdAt         DateTime @default(now())
  
  // Relations
  items             StockEntryItem[]
  
  @@index([companyId, factoryId])
  @@index([transactionType])
  @@index([entryNo])
}

model StockEntryItem {
  id                String   @id @default(uuid())
  entryId           String
  entry             StockEntry @relation(fields: [entryId], references: [id])
  
  lineNo            Int
  
  // Item Details
  materialCode      String
  materialName      String
  
  // From Location (for transfers)
  fromWarehouse     String?
  fromBin           String?
  
  // To Location
  toWarehouse       String
  toBin             String?
  
  // Quantity
  quantity          Float
  uom               String
  
  // Rate & Value
  rate              Float
  amount            Float
  
  // Batch
  batchNo           String?
  expiryDate        DateTime?
  
  remarks           String?
  
  @@index([entryId])
  @@index([materialCode])
}

// Material Issue/Requisition Slip
model MaterialIssue {
  id                String   @id @default(uuid())
  issueNo           String   @unique
  companyId         String
  factoryId         String
  
  issueDate         DateTime @default(now())
  issueType         String   // NORMAL, RETURNABLE, CAPITAL
  
  // Request Details
  requestedBy       String
  departmentId      String
  costCenterId      String?
  purpose           String
  
  // Approval
  approvedBy        String?
  approvedAt        DateTime?
  
  // Issue Status
  status            String   @default("PENDING") // PENDING, APPROVED, PARTIAL, ISSUED, CANCELLED
  
  // Return (for returnable items)
  returnDue         DateTime?
  returnStatus      String?  // PENDING, PARTIAL, RETURNED
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relations
  items             MaterialIssueItem[]
  
  @@index([companyId, factoryId])
  @@index([status])
  @@index([issueNo])
}

model MaterialIssueItem {
  id                String   @id @default(uuid())
  issueId           String
  issue             MaterialIssue @relation(fields: [issueId], references: [id])
  
  lineNo            Int
  
  // Item Details
  materialCode      String
  materialName      String
  
  // Quantity
  requestedQty      Float
  approvedQty       Float?
  issuedQty         Float    @default(0)
  returnedQty       Float    @default(0)
  
  uom               String
  
  // Stock Location
  warehouseId       String
  binLocation       String?
  
  remarks           String?
  
  @@index([issueId])
  @@index([materialCode])
}

// Stock Transfer between locations
model StockTransfer {
  id                String   @id @default(uuid())
  transferNo        String   @unique
  companyId         String
  
  transferDate      DateTime @default(now())
  transferType      String   // WAREHOUSE, FACTORY, INTER_COMPANY
  
  // From
  fromFactoryId     String
  fromWarehouseId   String
  
  // To
  toFactoryId       String
  toWarehouseId     String
  
  // Transport
  vehicleNo         String?
  transporterName   String?
  
  // Status
  status            String   @default("DRAFT") // DRAFT, IN_TRANSIT, RECEIVED, CANCELLED
  
  // Dispatch
  dispatchedBy      String?
  dispatchedAt      DateTime?
  
  // Receipt
  receivedBy        String?
  receivedAt        DateTime?
  
  remarks           String?
  
  createdBy         String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relations
  items             StockTransferItem[]
  
  @@index([companyId])
  @@index([status])
  @@index([transferNo])
}

model StockTransferItem {
  id                String   @id @default(uuid())
  transferId        String
  transfer          StockTransfer @relation(fields: [transferId], references: [id])
  
  lineNo            Int
  
  // Item Details
  materialCode      String
  materialName      String
  
  // Quantity
  transferQty       Float
  receivedQty       Float    @default(0)
  
  uom               String
  
  // Batch
  batchNo           String?
  
  // From Location
  fromBin           String?
  
  // To Location
  toBin             String?
  
  remarks           String?
  
  @@index([transferId])
  @@index([materialCode])
}

// Physical Stock Verification
model StockCount {
  id                String   @id @default(uuid())
  countNo           String   @unique
  companyId         String
  factoryId         String
  
  countDate         DateTime @default(now())
  countType         String   // PERIODIC, ANNUAL, SURPRISE
  
  warehouseId       String
  
  // Status
  status            String   @default("PLANNED") // PLANNED, IN_PROGRESS, COMPLETED, APPROVED
  
  // Count Team
  countBy           String[]
  supervisedBy      String?
  
  // Approval
  approvedBy        String?
  approvedAt        DateTime?
  
  remarks           String?
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relations
  items             StockCountItem[]
  
  @@index([companyId, factoryId])
  @@index([status])
  @@index([countNo])
}

model StockCountItem {
  id                String   @id @default(uuid())
  countId           String
  count             StockCount @relation(fields: [countId], references: [id])
  
  // Item Details
  materialCode      String
  materialName      String
  
  // Location
  binLocation       String?
  batchNo           String?
  
  // Quantity
  systemQty         Float    // As per system
  physicalQty       Float?   // Actual count
  varianceQty       Float?   // Difference
  
  uom               String
  
  // Value
  rate              Float
  varianceValue     Float?
  
  // Verification
  recountRequired   Boolean  @default(false)
  recountQty        Float?
  
  remarks           String?
  
  @@index([countId])
  @@index([materialCode])
}

// Min-Max Inventory Planning
model InventoryPlanning {
  id                String   @id @default(uuid())
  companyId         String
  factoryId         String
  
  materialCode      String
  warehouseId       String
  
  // Planning Parameters
  minQty            Float
  maxQty            Float
  reorderQty        Float
  reorderLevel      Float
  
  // Lead Time
  leadTimeDays      Int      @default(7)
  safetyStockDays   Int      @default(7)
  
  // Consumption
  avgDailyConsumption Float  @default(0)
  maxDailyConsumption Float  @default(0)
  
  // Review
  lastReviewDate    DateTime?
  nextReviewDate    DateTime?
  
  isActive          Boolean  @default(true)
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@unique([companyId, factoryId, materialCode, warehouseId])
  @@index([materialCode])
}